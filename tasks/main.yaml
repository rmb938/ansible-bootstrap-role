---
# TODO: CIS benchmark fixing once it's released for 24.04

# TODO: add NTP server
- name: Remove password from user rbelgrave
  ansible.builtin.user:
    name: rbelgrave
    password: '*'

- name: Set timezone
  community.general.timezone:
    name: America/Chicago

- name: Install unattended-upgrades
  ansible.builtin.package:
    name:
      - unattended-upgrades
    state: present

- name: Configure Auto Upgrades
  ansible.builtin.template:
    src: etc/apt/apt.conf.d/50unattended-upgrades
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    mode: "0644"
  register: unattended_upgrades_50

- name: Restart unattended-upgrades # noqa: no-handler
  ansible.builtin.systemd:
    name: unattended-upgrades
    state: restarted
    enabled: true
  when: unattended_upgrades_50.changed

- name: Install tools
  ansible.builtin.package:
    name:
      - net-tools
      - htop
      - unzip
      - gnupg2
      - vim
    state: present

- name: Install Step CLI
  # TODO: smallstep doesn't have a apt repo, so we need a way to keep this updated
  ansible.builtin.apt:
    deb: https://dl.smallstep.com/cli/docs-cli-install/latest/step-cli_amd64.deb

- name: Configure Step CLI
  ansible.builtin.command: "step ca bootstrap --ca-url https://cuboid-topi.rmb1993-gmail-com.ca.smallstep.com --fingerprint eb136a5118931a2306964469705323521dda8c43d26ec67e1c5508eb123f9c70" # noqa: yaml[line-length]
  args:
    creates: /etc/step/config/defaults.json
  environment:
    STEPPATH: "/etc/step"

- name: Copy SmallStep CA to System Store
  ansible.builtin.copy:
    remote_src: true
    src: /etc/step/certs/root_ca.crt
    dest: /usr/local/share/ca-certificates/smallstep.crt
    mode: "0644"
  register: smallstep_ca_copy

- name: Update CA Trust # noqa: no-handler
  ansible.builtin.command: update-ca-certificates
  changed_when: false
  when: smallstep_ca_copy is changed

- name: Place SmallStep SystemD Renewal Service
  ansible.builtin.template:
    src: etc/systemd/system/cert-renewer@.service
    dest: /etc/systemd/system/cert-renewer@.service
    mode: "0644"
  register: smallstep_ca_systemd_renewal_service_template

- name: Place SmallStep SystemD Renewal Timer
  ansible.builtin.template:
    src: etc/systemd/system/cert-renewer@.timer
    dest: /etc/systemd/system/cert-renewer@.timer
    mode: "0644"
  register: smallstep_ca_systemd_renewal_timer_template

- name: Reload SystemD # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: smallstep_ca_systemd_renewal_service_template.changed or smallstep_ca_systemd_renewal_timer_template.changed

- name: Install Prometheus Node Exporter
  ansible.builtin.package:
    name:
      - prometheus-node-exporter
    state: present

- name: Start and Enable Prometheus Node Exporter
  ansible.builtin.systemd:
    service: prometheus-node-exporter
    state: started
    enabled: true

- name: Install Fluentbit keyring
  ansible.builtin.get_url:
    url: https://packages.fluentbit.io/fluentbit.key
    dest: /usr/share/keyrings/fluentbit-keyring.asc
    checksum: sha256:df248e2d7103ca62cb683c20a077198d0fb0a7f79dbf53a604af0317de3b4711
    mode: "0644"

- name: Add Fluentbit repo
  ansible.builtin.apt_repository:
    repo: >
      deb [signed-by=/usr/share/keyrings/fluentbit-keyring.asc]
      https://packages.fluentbit.io/ubuntu/noble noble main
    state: present

- name: Install fluentbit
  ansible.builtin.package:
    name: fluent-bit
    state: present

- name: Configure fluentbit
  ansible.builtin.template:
    src: etc/fluent-bit/fluent-bit.conf
    dest: /etc/fluent-bit/fluent-bit.conf
    mode: "0644"
    owner: root
    group: root
  register: fluentbit_config

- name: Configure fluentbit Parsers
  ansible.builtin.template:
    src: etc/fluent-bit/parsers.conf
    dest: /etc/fluent-bit/parsers.conf
    mode: "0644"
    owner: root
    group: root
  register: fluentbit_parsers

- name: Create fluentbit state directory
  ansible.builtin.file:
    path: /var/lib/fluent-bit
    mode: "0755"
    owner: root
    group: root
    state: directory

- name: Start fluentbit
  ansible.builtin.systemd:
    service: fluent-bit
    state: started
    enabled: true

- name: Restart fluentbit if config changed # noqa: no-handler
  ansible.builtin.systemd:
    name: fluent-bit
    state: restarted
  when: fluentbit_config.changed or fluentbit_parsers.changed

# CIS Hardening

# yamllint disable rule:line-length
# inspec exec git@github.com:dev-sec/cis-dil-benchmark.git --target ssh://rbelgrave@haproxy-t2-1.tailnet-047c.ts.net --sudo --reporter cli html:index.html -i ~/.ssh/id_ed25519
# yamllint enable rule:line-length

# Current build as of 12/20/24:
#   Proxmox Ubuntu 24.04 LXC:
#   Ubuntu 24.04 VM:

- name: "1.1.1.1 - 1.1.1.7"
  ansible.builtin.copy:
    dest: /etc/modprobe.d/disabled-fs-ansible.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      install cramfs /bin/true
      install freevxfs /bin/true
      install jffs2 /bin/true
      install hfs /bin/true
      install hfsplus /bin/true
      install squashfs /bin/true
      install udf /bin/true
      install vfat /bin/true
      install usb_storage /bin/true

- name: "2.2.16"
  ansible.builtin.systemd_service:
    name: rsync
    enabled: false
    masked: true

- name: "3.1.2"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.send_redirects", value: 0 }
    - { name: "net.ipv4.conf.default.send_redirects", value: 0 }

- name: "3.2.1"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.accept_source_route", value: 0 }
    - { name: "net.ipv4.conf.default.accept_source_route", value: 0 }
    - { name: "net.ipv6.conf.all.accept_source_route", value: 0 }
    - { name: "net.ipv6.conf.default.accept_source_route", value: 0 }

- name: "3.2.2"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.accept_redirects", value: 0 }
    - { name: "net.ipv4.conf.default.accept_redirects", value: 0 }
    - { name: "net.ipv6.conf.all.accept_redirects", value: 0 }
    - { name: "net.ipv6.conf.default.accept_redirects", value: 0 }

- name: "3.2.3"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.secure_redirects", value: 0 }
    - { name: "net.ipv4.conf.default.secure_redirects", value: 0 }

- name: "3.2.4"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.log_martians", value: 1 }
    - { name: "net.ipv4.conf.default.log_martians", value: 1 }

- name: "3.2.7"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  with_items:
    - { name: "net.ipv4.conf.all.rp_filter", value: 1 }
    - { name: "net.ipv4.conf.default.rp_filter", value: 1 }
# We like ipv6 RA so not setting this
# - name: "3.2.9"
#   ansible.posix.sysctl:
#     name: "{{ item.name }}"
#     value: "{{ item.value }}"
#     reload: true
#   with_items:
#     - {name: "net.ipv6.conf.all.accept_ra", value: 0}
#     - {name: "net.ipv6.conf.default.accept_ra", value: 0}

- name: "3.4.1 - 3.4.4"
  ansible.builtin.copy:
    dest: /etc/modprobe.d/disabled-network-ansible.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      install dccp /bin/true
      install sctp /bin/true
      install rds /bin/true
      install tipc /bin/true

- name: "5.2 SSH Server Configuration Template"
  ansible.builtin.template:
    src: etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    mode: "0600"
  register: ssh_server_config_5_2

- name: "5.2 Restart SSH Server"  # noqa: no-handler
  ansible.builtin.systemd:
    name: sshd
    state: restarted
  when: ssh_server_config_5_2.changed
